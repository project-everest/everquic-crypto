[
  "33efa2f454594ad85360013c9fc56352",
  [
    [
      "QUIC.Spec.__proj__H_Success__item__h",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_QUIC.Spec.H_Success",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_41a221fee66f584de22f732f8d82cb35"
      ],
      0,
      "6cb73cfac19db8a85365a963e8224a17"
    ],
    [
      "QUIC.Spec.__proj__H_Success__item__cipher",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_QUIC.Spec.H_Success",
        "proj_equation_QUIC.Spec.H_Success_h",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_QUIC.Spec.H_Success_h",
        "refinement_interpretation_Tm_refine_41a221fee66f584de22f732f8d82cb35"
      ],
      0,
      "1c1c0983f9645f9b2595b8d990a1d017"
    ],
    [
      "QUIC.Spec.__proj__H_Success__item__rem",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_QUIC.Spec.H_Success",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_41a221fee66f584de22f732f8d82cb35"
      ],
      0,
      "e5b8dcc0891f5ad7a93d99074c4809a6"
    ],
    [
      "QUIC.Spec.__proj__Success__item__h",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "disc_equation_QUIC.Spec.Success",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_aba7fc93080f0d16051eeca94b015f55"
      ],
      0,
      "c2b4ec4855bede55609ed9d97221bdc9"
    ],
    [
      "QUIC.Spec.__proj__Success__item__plain",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "disc_equation_QUIC.Spec.Success",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_aba7fc93080f0d16051eeca94b015f55"
      ],
      0,
      "56f25c8d6fda1d81257cf4b63ceaaa8d"
    ],
    [
      "QUIC.Spec.__proj__Success__item__remainder",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "disc_equation_QUIC.Spec.Success",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_aba7fc93080f0d16051eeca94b015f55"
      ],
      0,
      "b0dd98ac230efe1146d379519ad50a78"
    ],
    [
      "QUIC.Spec.iv_t",
      1,
      2,
      1,
      [
        "@query", "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_Spec.Agile.AEAD.is_supported_alg"
      ],
      0,
      "a33cba1262f40d0efbbcb32e13b5dbbe"
    ],
    [
      "QUIC.Spec.iv_for_encrypt_decrypt",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.SEC@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.minint", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.range", "equation_Lib.IntTypes.unsigned",
        "equation_Lib.IntTypes.v", "equation_QUIC.Spec.Base.byte",
        "equation_QUIC.Spec.Base.bytes",
        "equation_QUIC.Spec.Header.Base.packet_number",
        "equation_QUIC.Spec.PacketNumber.Base.packet_number_t",
        "equation_QUIC.Spec.iv_t", "equation_QUIC.UInt62.bound",
        "equation_QUIC.UInt62.secret", "equation_Spec.Agile.AEAD.iv",
        "equation_Spec.Agile.AEAD.uint8",
        "lemma_QUIC.Secret.Seq.seq_hide_length",
        "lemma_QUIC.Secret.Seq.seq_reveal_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThan",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_4ae12848fac0601da6605bac9d6872f1",
        "refinement_interpretation_Tm_refine_6a2c6f334650b2f7cac403efedcf0e8d",
        "refinement_interpretation_Tm_refine_ad8e128e5ab491e948430941006df70a",
        "refinement_interpretation_Tm_refine_bc091439e537dad49a811907a6d15e1b",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_dd6b7c82943901495ce61ec2042328d2",
        "typing_QUIC.Secret.Seq.seq_reveal",
        "typing_QUIC.Spec.Header.Base.packet_number",
        "typing_QUIC.UInt62.bound", "typing_tok_Lib.IntTypes.SEC@tok",
        "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "7d31e72df6bb30bb7df8c246f0f99084"
    ],
    [
      "QUIC.Spec.payload_encrypt",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Spec.AES.AES128",
        "constructor_distinct_Spec.Agile.AEAD.AES128_GCM",
        "constructor_distinct_Spec.Agile.Cipher.AES128",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.SEC@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Spec.AES.AES128@tok",
        "equality_tok_Spec.Agile.AEAD.AES128_GCM@tok",
        "equality_tok_Spec.Agile.AEAD.AES256_GCM@tok",
        "equality_tok_Spec.Agile.AEAD.CHACHA20_POLY1305@tok",
        "equality_tok_Spec.Agile.Cipher.AES128@tok",
        "equation_FStar.UInt.max_int", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.unsigned",
        "equation_QUIC.Spec.Base.byte", "equation_QUIC.Spec.Base.bytes",
        "equation_QUIC.Spec.Base.lbytes", "equation_QUIC.Spec.Crypto.ea",
        "equation_QUIC.Spec.Crypto.max_cipher_length",
        "equation_QUIC.Spec.Crypto.max_plain_length",
        "equation_QUIC.Spec.Crypto.pbytes",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.Header.Base.header_len",
        "equation_QUIC.Spec.iv_t", "equation_Spec.AES.key_size",
        "equation_Spec.Agile.AEAD.cipher",
        "equation_Spec.Agile.AEAD.cipher_alg_of_supported_alg",
        "equation_Spec.Agile.AEAD.cipher_length",
        "equation_Spec.Agile.AEAD.encrypted",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.Agile.AEAD.iv", "equation_Spec.Agile.AEAD.iv_length",
        "equation_Spec.Agile.AEAD.max_length",
        "equation_Spec.Agile.AEAD.supported_alg",
        "equation_Spec.Agile.AEAD.tag_length",
        "equation_Spec.Agile.AEAD.uint8",
        "equation_Spec.Agile.Cipher.aes_alg_of_alg",
        "equation_Spec.Agile.Cipher.key_length",
        "lemma_QUIC.Secret.Seq.seq_hide_length",
        "lemma_QUIC.Secret.Seq.seq_reveal_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_398c936a023435f7b62ad5827e53565d",
        "refinement_interpretation_Tm_refine_48105a3b0a4d5ade4079db78fd09b575",
        "refinement_interpretation_Tm_refine_69c8dece313a8e5d48c4e41a27b5d1ae",
        "refinement_interpretation_Tm_refine_85b3cfee78e846c889eb69918162db4e",
        "refinement_interpretation_Tm_refine_9315e6f2e6143f3996b9238ef3ae182b",
        "refinement_interpretation_Tm_refine_a9e6184981784a7b16f6d4a7df0cf8ae",
        "refinement_interpretation_Tm_refine_ad8e128e5ab491e948430941006df70a",
        "refinement_interpretation_Tm_refine_ce5a1bd8437baa640019cd70bf466fc0",
        "refinement_interpretation_Tm_refine_d22265fc7f78898e63900361ae5cf5cb",
        "refinement_interpretation_Tm_refine_dd6b7c82943901495ce61ec2042328d2",
        "refinement_interpretation_Tm_refine_f2a41ff9dd4a9fd5a0f23a0be1a5d106",
        "typing_QUIC.Spec.Crypto.max_plain_length",
        "typing_QUIC.Spec.Crypto.supported_aead",
        "typing_QUIC.Spec.Header.Base.header_len",
        "typing_Spec.Agile.AEAD.is_supported_alg",
        "typing_tok_Lib.IntTypes.SEC@tok", "typing_tok_Lib.IntTypes.U8@tok",
        "typing_tok_Spec.Agile.AEAD.AES128_GCM@tok",
        "typing_tok_Spec.Agile.AEAD.AES256_GCM@tok",
        "typing_tok_Spec.Agile.AEAD.CHACHA20_POLY1305@tok"
      ],
      0,
      "b9ee5726b113b16a4f637293ff0ddc45"
    ],
    [
      "QUIC.Spec.encrypt",
      1,
      2,
      1,
      [
        "@query", "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_Spec.Agile.AEAD.is_supported_alg"
      ],
      0,
      "9ac1179397395d424d6c5e496e7f241f"
    ],
    [
      "QUIC.Spec.encrypt",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "equation_QUIC.Spec.Crypto.pbytes_",
        "equation_QUIC.Spec.Header.Base.is_retry",
        "refinement_interpretation_Tm_refine_89c1d5caeae1b0c9c4b7ad47a3970283",
        "typing_QUIC.Spec.Header.Base.is_retry"
      ],
      0,
      "103404f7278fec6fa9d82f42d4de7b3f"
    ],
    [
      "QUIC.Spec.encrypt",
      3,
      2,
      1,
      [
        "@query", "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_Spec.Agile.AEAD.is_supported_alg"
      ],
      0,
      "35b889eccbd7e77d70c5a0af32d22990"
    ],
    [
      "QUIC.Spec.encrypt_length",
      1,
      2,
      1,
      [
        "@query", "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_Spec.Agile.AEAD.is_supported_alg"
      ],
      0,
      "ed57d8d6ca0d0309c3fbafc239502f6a"
    ],
    [
      "QUIC.Spec.encrypt_length",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "constructor_distinct_FStar.Integers.Signed",
        "constructor_distinct_FStar.Integers.Winfinite",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Spec.AES.AES128",
        "constructor_distinct_Spec.Agile.Cipher.AES128",
        "equality_tok_FStar.Integers.Winfinite@tok",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.SEC@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Spec.AES.AES128@tok",
        "equality_tok_Spec.Agile.Cipher.AES128@tok",
        "equation_FStar.Integers.int_t", "equation_FStar.UInt.max_int",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.unsigned", "equation_QUIC.Spec.Base.byte",
        "equation_QUIC.Spec.Base.bytes",
        "equation_QUIC.Spec.Base.header_len_bound",
        "equation_QUIC.Spec.Base.lbytes", "equation_QUIC.Spec.Crypto.cbytes",
        "equation_QUIC.Spec.Crypto.ea",
        "equation_QUIC.Spec.Crypto.max_plain_length",
        "equation_QUIC.Spec.Crypto.pbytes_",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.Header.Base.header_len",
        "equation_QUIC.Spec.Header.Base.is_retry",
        "equation_QUIC.Spec.encrypt",
        "equation_QUIC.Spec.iv_for_encrypt_decrypt",
        "equation_QUIC.Spec.iv_t", "equation_QUIC.Spec.payload_encrypt",
        "equation_Spec.AES.key_size", "equation_Spec.Agile.AEAD.ad",
        "equation_Spec.Agile.AEAD.cipher",
        "equation_Spec.Agile.AEAD.cipher_alg_of_supported_alg",
        "equation_Spec.Agile.AEAD.cipher_length",
        "equation_Spec.Agile.AEAD.encrypted",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.Agile.AEAD.iv", "equation_Spec.Agile.AEAD.iv_length",
        "equation_Spec.Agile.AEAD.max_length",
        "equation_Spec.Agile.AEAD.plain",
        "equation_Spec.Agile.AEAD.supported_alg",
        "equation_Spec.Agile.AEAD.tag_length",
        "equation_Spec.Agile.AEAD.uint8",
        "equation_Spec.Agile.Cipher.aes_alg_of_alg",
        "equation_Spec.Agile.Cipher.key_length",
        "fuel_guarded_inversion_Spec.Agile.Cipher.cipher_alg",
        "int_inversion", "int_typing",
        "lemma_QUIC.Secret.Seq.seq_hide_length",
        "lemma_QUIC.Secret.Seq.seq_reveal_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Integers.Signed__0",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_48105a3b0a4d5ade4079db78fd09b575",
        "refinement_interpretation_Tm_refine_69c8dece313a8e5d48c4e41a27b5d1ae",
        "refinement_interpretation_Tm_refine_89c1d5caeae1b0c9c4b7ad47a3970283",
        "refinement_interpretation_Tm_refine_9315e6f2e6143f3996b9238ef3ae182b",
        "refinement_interpretation_Tm_refine_a9e6184981784a7b16f6d4a7df0cf8ae",
        "refinement_interpretation_Tm_refine_ad8e128e5ab491e948430941006df70a",
        "refinement_interpretation_Tm_refine_b19a1c83769dccbdda4cf44bd4e3d295",
        "refinement_interpretation_Tm_refine_ce5a1bd8437baa640019cd70bf466fc0",
        "refinement_interpretation_Tm_refine_d22265fc7f78898e63900361ae5cf5cb",
        "refinement_interpretation_Tm_refine_dd6b7c82943901495ce61ec2042328d2",
        "refinement_interpretation_Tm_refine_e9fb5d4ab4ff927c340845cf621dbeaa",
        "refinement_interpretation_Tm_refine_f2a41ff9dd4a9fd5a0f23a0be1a5d106",
        "typing_Lib.IntTypes.unsigned", "typing_QUIC.Secret.Seq.seq_hide",
        "typing_QUIC.Spec.Header.Base.header_len",
        "typing_QUIC.Spec.Header.Base.is_retry",
        "typing_QUIC.Spec.Header.Parse.format_header",
        "typing_QUIC.Spec.iv_for_encrypt_decrypt",
        "typing_Spec.Agile.AEAD.cipher_alg_of_supported_alg",
        "typing_Spec.Agile.AEAD.cipher_length",
        "typing_Spec.Agile.AEAD.encrypt", "typing_tok_Lib.IntTypes.SEC@tok",
        "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "4fa0fd4aee5c0e55fe1a5ccfd5fcabe8"
    ],
    [
      "QUIC.Spec.encrypt_length",
      3,
      2,
      1,
      [
        "@query", "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_Spec.Agile.AEAD.is_supported_alg"
      ],
      0,
      "abebfd44e462ab346814819e6abb0a28"
    ],
    [
      "QUIC.Spec.payload_decrypt",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Spec.AES.AES128",
        "constructor_distinct_Spec.Agile.AEAD.AES128_GCM",
        "constructor_distinct_Spec.Agile.Cipher.AES128",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Spec.AES.AES128@tok",
        "equality_tok_Spec.Agile.AEAD.AES128_GCM@tok",
        "equality_tok_Spec.Agile.AEAD.AES256_GCM@tok",
        "equality_tok_Spec.Agile.AEAD.CHACHA20_POLY1305@tok",
        "equality_tok_Spec.Agile.Cipher.AES128@tok",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.unsigned", "equation_QUIC.Spec.Base.byte",
        "equation_QUIC.Spec.Base.bytes",
        "equation_QUIC.Spec.Base.header_len_bound",
        "equation_QUIC.Spec.Base.lbytes", "equation_QUIC.Spec.Crypto.ea",
        "equation_QUIC.Spec.Crypto.max_cipher_length",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.Header.Base.header_len",
        "equation_QUIC.Spec.iv_t", "equation_Spec.AES.key_size",
        "equation_Spec.Agile.AEAD.cipher_alg_of_supported_alg",
        "equation_Spec.Agile.AEAD.cipher_max_length",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.Agile.AEAD.iv", "equation_Spec.Agile.AEAD.iv_length",
        "equation_Spec.Agile.AEAD.max_length",
        "equation_Spec.Agile.AEAD.supported_alg",
        "equation_Spec.Agile.AEAD.tag_length",
        "equation_Spec.Agile.AEAD.uint8",
        "equation_Spec.Agile.Cipher.aes_alg_of_alg",
        "equation_Spec.Agile.Cipher.key_length", "int_inversion",
        "int_typing", "lemma_QUIC.Secret.Seq.seq_hide_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10159befdbeef8295ab005051b4d2233",
        "refinement_interpretation_Tm_refine_242ebaa571cdeeda9c524f0c8e87b08d",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_69c8dece313a8e5d48c4e41a27b5d1ae",
        "refinement_interpretation_Tm_refine_a9e6184981784a7b16f6d4a7df0cf8ae",
        "refinement_interpretation_Tm_refine_ad8e128e5ab491e948430941006df70a",
        "refinement_interpretation_Tm_refine_ce5a1bd8437baa640019cd70bf466fc0",
        "refinement_interpretation_Tm_refine_d22265fc7f78898e63900361ae5cf5cb",
        "refinement_interpretation_Tm_refine_dd6b7c82943901495ce61ec2042328d2",
        "refinement_interpretation_Tm_refine_f2a41ff9dd4a9fd5a0f23a0be1a5d106",
        "typing_QUIC.Spec.Crypto.max_cipher_length",
        "typing_QUIC.Spec.Crypto.supported_aead",
        "typing_QUIC.Spec.Header.Base.header_len",
        "typing_tok_Lib.IntTypes.U8@tok",
        "typing_tok_Spec.Agile.AEAD.AES128_GCM@tok",
        "typing_tok_Spec.Agile.AEAD.AES256_GCM@tok",
        "typing_tok_Spec.Agile.AEAD.CHACHA20_POLY1305@tok"
      ],
      0,
      "66ae84e8bca64dd2f992632798ec353f"
    ],
    [
      "QUIC.Spec.decrypt",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "disc_equation_QUIC.Spec.Failure", "disc_equation_QUIC.Spec.Success",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.unsigned", "equation_Prims.nat",
        "equation_QUIC.Spec.Base.byte", "equation_QUIC.Spec.Base.bytes",
        "equation_QUIC.Spec.Crypto.supported_aead", "equation_Spec.AES.gf8",
        "equation_Spec.AES.irred",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.GaloisField.gf",
        "fuel_guarded_inversion_QUIC.Spec.result",
        "function_token_typing_Lib.IntTypes.byte_t",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "typing_FStar.Seq.Base.length", "typing_Spec.AES.gf8",
        "typing_Spec.GaloisField.__proj__GF__item__t"
      ],
      0,
      "cbc844d0abe5ff9c41ca8e367ee65b09"
    ],
    [
      "QUIC.Spec.decrypt",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Spec.AES.AES128",
        "constructor_distinct_Spec.Agile.Cipher.AES128",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_QUIC.Spec.Failure",
        "disc_equation_QUIC.Spec.Header.H_Failure",
        "disc_equation_QUIC.Spec.Header.H_Success",
        "disc_equation_QUIC.Spec.Success",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Spec.AES.AES128@tok",
        "equality_tok_Spec.Agile.Cipher.AES128@tok",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.unsigned", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_QUIC.Spec.Base.byte",
        "equation_QUIC.Spec.Base.bytes", "equation_QUIC.Spec.Crypto.ea",
        "equation_QUIC.Spec.Crypto.max_cipher_length",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.Header.Base.is_retry", "equation_QUIC.Spec.iv_t",
        "equation_Spec.AES.key_size",
        "equation_Spec.Agile.AEAD.cipher_alg_of_supported_alg",
        "equation_Spec.Agile.AEAD.cipher_max_length",
        "equation_Spec.Agile.AEAD.decrypted",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.Agile.AEAD.iv", "equation_Spec.Agile.AEAD.iv_length",
        "equation_Spec.Agile.AEAD.supported_alg",
        "equation_Spec.Agile.AEAD.tag_length",
        "equation_Spec.Agile.AEAD.uint8",
        "equation_Spec.Agile.Cipher.aes_alg_of_alg",
        "equation_Spec.Agile.Cipher.key_length",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_QUIC.Spec.Header.h_result",
        "fuel_guarded_inversion_QUIC.Spec.result", "int_inversion",
        "lemma_QUIC.Secret.Seq.seq_hide_length",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_QUIC.Spec.Header.H_Success_h",
        "projection_inverse_QUIC.Spec.Header.H_Success_rem",
        "refinement_interpretation_Tm_refine_242ebaa571cdeeda9c524f0c8e87b08d",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_69c8dece313a8e5d48c4e41a27b5d1ae",
        "refinement_interpretation_Tm_refine_84cb64ce3f79c2e9ab33a99db5d2ca21",
        "refinement_interpretation_Tm_refine_ad8e128e5ab491e948430941006df70a",
        "refinement_interpretation_Tm_refine_c03c785b06467ff3f44ee196d7dad162",
        "refinement_interpretation_Tm_refine_c76ff382da2d9ad7a361bb5f19c44db0",
        "refinement_interpretation_Tm_refine_ce5a1bd8437baa640019cd70bf466fc0",
        "refinement_interpretation_Tm_refine_dd6b7c82943901495ce61ec2042328d2",
        "refinement_interpretation_Tm_refine_f3914efc065faad1dc5d4b0d38f49557",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt8.t",
        "typing_Lib.IntTypes.int_t", "typing_Lib.IntTypes.unsigned",
        "typing_QUIC.Spec.Crypto.max_cipher_length",
        "typing_QUIC.Spec.Crypto.supported_aead",
        "typing_QUIC.Spec.Header.Base.is_retry",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "df71e278f791706ca626c8ae0a7f0b2b"
    ],
    [
      "QUIC.Spec.decrypt",
      3,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "constructor_distinct_FStar.Integers.W16",
        "constructor_distinct_FStar.Integers.W8",
        "constructor_distinct_FStar.Integers.Winfinite",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U8",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_QUIC.Spec.Failure",
        "disc_equation_QUIC.Spec.Header.H_Failure",
        "disc_equation_QUIC.Spec.Header.H_Success",
        "disc_equation_QUIC.Spec.Success",
        "equality_tok_FStar.Integers.W16@tok",
        "equality_tok_FStar.Integers.W8@tok",
        "equality_tok_FStar.Integers.Winfinite@tok",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Prims.nat", "equation_QUIC.Spec.Base.byte",
        "equation_QUIC.Spec.Base.bytes", "equation_QUIC.Spec.Crypto.ea",
        "equation_QUIC.Spec.Crypto.max_cipher_length",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.Header.Base.is_retry", "equation_QUIC.Spec.iv_t",
        "equation_Spec.AES.gf8", "equation_Spec.AES.irred",
        "equation_Spec.Agile.AEAD.cipher_max_length",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.Agile.AEAD.iv", "equation_Spec.Agile.AEAD.iv_length",
        "equation_Spec.Agile.AEAD.supported_alg",
        "equation_Spec.Agile.AEAD.tag_length",
        "equation_Spec.Agile.AEAD.uint8", "equation_Spec.GaloisField.gf",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_QUIC.Spec.Header.h_result",
        "fuel_guarded_inversion_QUIC.Spec.result",
        "function_token_typing_Lib.IntTypes.byte_t", "int_inversion",
        "lemma_QUIC.Secret.Seq.seq_hide_length",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Integers.Signed__0",
        "projection_inverse_FStar.Integers.Unsigned__0",
        "projection_inverse_QUIC.Spec.Header.H_Success_h",
        "projection_inverse_QUIC.Spec.Header.H_Success_rem",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_242ebaa571cdeeda9c524f0c8e87b08d",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_69c8dece313a8e5d48c4e41a27b5d1ae",
        "refinement_interpretation_Tm_refine_84cb64ce3f79c2e9ab33a99db5d2ca21",
        "refinement_interpretation_Tm_refine_ad8e128e5ab491e948430941006df70a",
        "refinement_interpretation_Tm_refine_c03c785b06467ff3f44ee196d7dad162",
        "refinement_interpretation_Tm_refine_c76ff382da2d9ad7a361bb5f19c44db0",
        "refinement_interpretation_Tm_refine_ce5a1bd8437baa640019cd70bf466fc0",
        "refinement_interpretation_Tm_refine_dd6b7c82943901495ce61ec2042328d2",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "refinement_interpretation_Tm_refine_f3914efc065faad1dc5d4b0d38f49557",
        "typing_FStar.Seq.Base.length",
        "typing_QUIC.Spec.Crypto.max_cipher_length",
        "typing_QUIC.Spec.Crypto.supported_aead",
        "typing_QUIC.Spec.Header.Base.is_retry", "typing_Spec.AES.gf8",
        "typing_Spec.GaloisField.__proj__GF__item__t",
        "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "f27df0256d024c314cb54fe4dac148b3"
    ],
    [
      "QUIC.Spec.lemma_encrypt_correct",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_FStar.Integers.W16",
        "constructor_distinct_FStar.Integers.W32",
        "constructor_distinct_FStar.Integers.W64",
        "constructor_distinct_FStar.Integers.W8",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_FStar.Integers.W16@tok",
        "equality_tok_FStar.Integers.W32@tok",
        "equality_tok_FStar.Integers.W64@tok",
        "equality_tok_FStar.Integers.W8@tok",
        "equality_tok_Lib.IntTypes.SEC@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.minint",
        "equation_Lib.IntTypes.range", "equation_Lib.IntTypes.unsigned",
        "equation_Lib.IntTypes.v",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.PacketNumber.Base.packet_number_length_t",
        "equation_Spec.AES.gf8", "equation_Spec.AES.irred",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.GaloisField.gf", "primitive_Prims.op_Subtraction",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Integers.Signed__0",
        "projection_inverse_FStar.Integers.Unsigned__0",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_1622082edcbeee4d7aa5d33c2647f14f",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "typing_Spec.AES.gf8", "typing_Spec.GaloisField.__proj__GF__item__t"
      ],
      0,
      "e2946e4ea72b20670811f4e9507a1308"
    ],
    [
      "QUIC.Spec.lemma_encrypt_correct",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_QUIC.Spec.Header.H_Success",
        "disc_equation_QUIC.Spec.Header.Base.MLong",
        "disc_equation_QUIC.Spec.Header.Base.MRetry",
        "disc_equation_QUIC.Spec.Header.H_Failure",
        "disc_equation_QUIC.Spec.Header.H_Success",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.SEC@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.bits",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.maxint",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.unsigned",
        "equation_Prims.nat", "equation_QUIC.Spec.Base.byte",
        "equation_QUIC.Spec.Base.bytes",
        "equation_QUIC.Spec.Base.header_len_bound",
        "equation_QUIC.Spec.Base.lbytes", "equation_QUIC.Spec.Crypto.cbytes",
        "equation_QUIC.Spec.Crypto.ea",
        "equation_QUIC.Spec.Crypto.max_cipher_length",
        "equation_QUIC.Spec.Crypto.max_plain_length",
        "equation_QUIC.Spec.Crypto.pbytes",
        "equation_QUIC.Spec.Crypto.pbytes_",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.Header.Base.has_payload_length",
        "equation_QUIC.Spec.Header.Base.header_len",
        "equation_QUIC.Spec.Header.Base.is_retry",
        "equation_QUIC.Spec.decrypt", "equation_QUIC.Spec.encrypt",
        "equation_QUIC.Spec.iv_t", "equation_QUIC.Spec.payload_decrypt",
        "equation_QUIC.Spec.payload_encrypt",
        "equation_Spec.Agile.AEAD.cipher",
        "equation_Spec.Agile.AEAD.cipher_length",
        "equation_Spec.Agile.AEAD.encrypted",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.Agile.AEAD.iv", "equation_Spec.Agile.AEAD.iv_length",
        "equation_Spec.Agile.AEAD.max_length",
        "equation_Spec.Agile.AEAD.supported_alg",
        "equation_Spec.Agile.AEAD.uint8",
        "fuel_guarded_inversion_QUIC.Spec.Header.Base.header",
        "fuel_guarded_inversion_QUIC.Spec.Header.h_result", "int_inversion",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_QUIC.Secret.Seq.seq_hide_length",
        "lemma_QUIC.Secret.Seq.seq_hide_reveal",
        "lemma_QUIC.Secret.Seq.seq_reveal_hide",
        "lemma_QUIC.Secret.Seq.seq_reveal_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_QUIC.Spec.Header.H_Success_cipher",
        "projection_inverse_QUIC.Spec.Header.H_Success_h",
        "projection_inverse_QUIC.Spec.Header.H_Success_rem",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_398c936a023435f7b62ad5827e53565d",
        "refinement_interpretation_Tm_refine_48105a3b0a4d5ade4079db78fd09b575",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_69c8dece313a8e5d48c4e41a27b5d1ae",
        "refinement_interpretation_Tm_refine_85b3cfee78e846c889eb69918162db4e",
        "refinement_interpretation_Tm_refine_89c1d5caeae1b0c9c4b7ad47a3970283",
        "refinement_interpretation_Tm_refine_9315e6f2e6143f3996b9238ef3ae182b",
        "refinement_interpretation_Tm_refine_a9e6184981784a7b16f6d4a7df0cf8ae",
        "refinement_interpretation_Tm_refine_ad8e128e5ab491e948430941006df70a",
        "refinement_interpretation_Tm_refine_c03c785b06467ff3f44ee196d7dad162",
        "refinement_interpretation_Tm_refine_cce38e2183360cee6eaadbf0edd7d6e0",
        "refinement_interpretation_Tm_refine_ce5a1bd8437baa640019cd70bf466fc0",
        "refinement_interpretation_Tm_refine_d0d05760ff54bc7db82fe374f7496238",
        "refinement_interpretation_Tm_refine_d22265fc7f78898e63900361ae5cf5cb",
        "refinement_interpretation_Tm_refine_dd6b7c82943901495ce61ec2042328d2",
        "refinement_interpretation_Tm_refine_e9fb5d4ab4ff927c340845cf621dbeaa",
        "refinement_interpretation_Tm_refine_f2a41ff9dd4a9fd5a0f23a0be1a5d106",
        "typing_FStar.Seq.Base.length", "typing_Lib.IntTypes.int_t",
        "typing_Lib.IntTypes.unsigned", "typing_QUIC.Secret.Seq.seq_hide",
        "typing_QUIC.Secret.Seq.seq_reveal",
        "typing_QUIC.Spec.Crypto.max_plain_length",
        "typing_QUIC.Spec.Crypto.supported_aead",
        "typing_QUIC.Spec.Header.Base.header_len",
        "typing_QUIC.Spec.Header.Base.is_retry",
        "typing_QUIC.Spec.Header.Base.uu___is_MLong",
        "typing_QUIC.Spec.Header.Parse.format_header",
        "typing_QUIC.Spec.payload_encrypt", "typing_Spec.Agile.AEAD.uint8",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.SEC@tok",
        "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "70516809f9a764f9e27a294c502a441e"
    ],
    [
      "QUIC.Spec.lemma_encrypt_correct",
      3,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Integers.W16",
        "constructor_distinct_FStar.Integers.W8",
        "constructor_distinct_FStar.Integers.Winfinite",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_QUIC.Spec.Header.H_Success",
        "constructor_distinct_Spec.AES.AES128",
        "constructor_distinct_Spec.Agile.Cipher.AES128",
        "constructor_distinct_Spec.Agile.Cipher.AES256",
        "constructor_distinct_Spec.Agile.Cipher.CHACHA20",
        "disc_equation_QUIC.Spec.Header.Base.MLong",
        "disc_equation_QUIC.Spec.Header.Base.MRetry",
        "disc_equation_QUIC.Spec.Header.H_Failure",
        "disc_equation_QUIC.Spec.Header.H_Success",
        "equality_tok_FStar.Integers.W16@tok",
        "equality_tok_FStar.Integers.W8@tok",
        "equality_tok_FStar.Integers.Winfinite@tok",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.SEC@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Spec.AES.AES128@tok",
        "equality_tok_Spec.Agile.Cipher.AES128@tok",
        "equality_tok_Spec.Agile.Cipher.AES256@tok",
        "equality_tok_Spec.Agile.Cipher.CHACHA20@tok",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.uint8",
        "equation_Prims.nat", "equation_QUIC.Spec.Base.byte",
        "equation_QUIC.Spec.Base.bytes",
        "equation_QUIC.Spec.Base.header_len_bound",
        "equation_QUIC.Spec.Base.lbytes", "equation_QUIC.Spec.Crypto.cbytes",
        "equation_QUIC.Spec.Crypto.ea",
        "equation_QUIC.Spec.Crypto.max_cipher_length",
        "equation_QUIC.Spec.Crypto.max_plain_length",
        "equation_QUIC.Spec.Crypto.pbytes",
        "equation_QUIC.Spec.Crypto.pbytes_",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.Header.Base.has_payload_length",
        "equation_QUIC.Spec.Header.Base.header_len",
        "equation_QUIC.Spec.Header.Base.is_retry",
        "equation_QUIC.Spec.decrypt", "equation_QUIC.Spec.encrypt",
        "equation_QUIC.Spec.iv_t", "equation_QUIC.Spec.payload_decrypt",
        "equation_QUIC.Spec.payload_encrypt", "equation_Spec.AES.gf8",
        "equation_Spec.AES.irred", "equation_Spec.AES.key_size",
        "equation_Spec.Agile.AEAD.cipher",
        "equation_Spec.Agile.AEAD.cipher_alg_of_supported_alg",
        "equation_Spec.Agile.AEAD.cipher_length",
        "equation_Spec.Agile.AEAD.encrypted",
        "equation_Spec.Agile.AEAD.is_supported_alg",
        "equation_Spec.Agile.AEAD.iv", "equation_Spec.Agile.AEAD.iv_length",
        "equation_Spec.Agile.AEAD.max_length",
        "equation_Spec.Agile.AEAD.supported_alg",
        "equation_Spec.Agile.AEAD.tag_length",
        "equation_Spec.Agile.AEAD.uint8",
        "equation_Spec.Agile.Cipher.aes_alg_of_alg",
        "equation_Spec.Agile.Cipher.key_length",
        "equation_Spec.GaloisField.gf",
        "fuel_guarded_inversion_QUIC.Spec.Header.Base.header",
        "fuel_guarded_inversion_QUIC.Spec.Header.h_result",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.uint8", "int_inversion",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_QUIC.Secret.Seq.seq_hide_length",
        "lemma_QUIC.Secret.Seq.seq_hide_reveal",
        "lemma_QUIC.Secret.Seq.seq_reveal_hide",
        "lemma_QUIC.Secret.Seq.seq_reveal_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Integers.Signed__0",
        "projection_inverse_FStar.Integers.Unsigned__0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_QUIC.Spec.Header.H_Success_cipher",
        "projection_inverse_QUIC.Spec.Header.H_Success_h",
        "projection_inverse_QUIC.Spec.Header.H_Success_rem",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_398c936a023435f7b62ad5827e53565d",
        "refinement_interpretation_Tm_refine_48105a3b0a4d5ade4079db78fd09b575",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_69c8dece313a8e5d48c4e41a27b5d1ae",
        "refinement_interpretation_Tm_refine_85b3cfee78e846c889eb69918162db4e",
        "refinement_interpretation_Tm_refine_89c1d5caeae1b0c9c4b7ad47a3970283",
        "refinement_interpretation_Tm_refine_9315e6f2e6143f3996b9238ef3ae182b",
        "refinement_interpretation_Tm_refine_a9e6184981784a7b16f6d4a7df0cf8ae",
        "refinement_interpretation_Tm_refine_ad8e128e5ab491e948430941006df70a",
        "refinement_interpretation_Tm_refine_c03c785b06467ff3f44ee196d7dad162",
        "refinement_interpretation_Tm_refine_cce38e2183360cee6eaadbf0edd7d6e0",
        "refinement_interpretation_Tm_refine_ce5a1bd8437baa640019cd70bf466fc0",
        "refinement_interpretation_Tm_refine_d0d05760ff54bc7db82fe374f7496238",
        "refinement_interpretation_Tm_refine_d22265fc7f78898e63900361ae5cf5cb",
        "refinement_interpretation_Tm_refine_dd6b7c82943901495ce61ec2042328d2",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "refinement_interpretation_Tm_refine_e9fb5d4ab4ff927c340845cf621dbeaa",
        "refinement_interpretation_Tm_refine_f2a41ff9dd4a9fd5a0f23a0be1a5d106",
        "typing_FStar.Seq.Base.length", "typing_QUIC.Secret.Seq.seq_hide",
        "typing_QUIC.Secret.Seq.seq_reveal",
        "typing_QUIC.Spec.Crypto.max_plain_length",
        "typing_QUIC.Spec.Crypto.supported_aead",
        "typing_QUIC.Spec.Header.Base.header_len",
        "typing_QUIC.Spec.Header.Base.is_retry",
        "typing_QUIC.Spec.Header.Base.uu___is_MLong",
        "typing_QUIC.Spec.Header.Parse.format_header",
        "typing_QUIC.Spec.payload_encrypt", "typing_Spec.AES.gf8",
        "typing_Spec.GaloisField.__proj__GF__item__t",
        "typing_tok_Lib.IntTypes.SEC@tok", "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "fc0c6da5d63fa8cedd0fbe08c9fae139"
    ]
  ]
]