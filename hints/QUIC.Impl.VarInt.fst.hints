[
  "878d94c1eeab21aa402c82ffbabacb60",
  [
    [
      "QUIC.Impl.VarInt.validate_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "2661d569a4ea2b2e29ab2136d4edcd63"
    ],
    [
      "QUIC.Impl.VarInt.validate_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Tm_unit",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.gt", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.gt", "equation_FStar.UInt64.lte",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.size_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.Spec.content_length_",
        "equation_LowParse.Low.Base.Spec.contents_",
        "equation_LowParse.Low.Base.Spec.valid_",
        "equation_LowParse.Low.Base.Spec.valid_content",
        "equation_LowParse.Low.Base.Spec.valid_content_pos",
        "equation_LowParse.Low.Base.Spec.valid_pos",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Low.ErrorCode._max_uint32_as_uint64",
        "equation_LowParse.Low.ErrorCode.is_error",
        "equation_LowParse.Low.ErrorCode.is_success",
        "equation_LowParse.Low.ErrorCode.pos_t",
        "equation_LowParse.Low.ErrorCode.validator_error",
        "equation_LowParse.Low.ErrorCode.validator_max_length",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Spec.VarInt.filter_u14",
        "equation_QUIC.Spec.VarInt.filter_u30",
        "equation_QUIC.Spec.VarInt.filter_u62",
        "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.synth_u14",
        "equation_QUIC.Spec.VarInt.synth_u30",
        "equation_QUIC.Spec.VarInt.synth_u62", "equation_QUIC.UInt62.bound",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.size_t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_00676929318b14dfd08ffa5b812ab4d0",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.vu_inv", "lemma_Lib.IntTypes.pow2_3",
        "lemma_LowParse.BitFields.uint8_v_eq",
        "lemma_LowParse.Low.Base.Spec.content_length_post",
        "lemma_LowParse.Low.Base.Spec.get_valid_pos_post",
        "lemma_LowParse.Low.Base.Spec.slice_access_frame_weak",
        "lemma_LowParse.Low.Base.Spec.slice_access_post",
        "lemma_LowParse.Low.Base.Spec.valid_elim_",
        "lemma_LowParse.Low.Base.Spec.valid_frame",
        "lemma_LowParse.Low.Base.Spec.valid_pos_get_valid_pos",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_sym_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.CLens.Mkclens_clens_cond",
        "proj_equation_LowParse.CLens.Mkclens_clens_get",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.CLens.Mkclens_clens_cond",
        "projection_inverse_LowParse.CLens.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_18b7ad0638ab74a51725a93c73b9be8d",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_316f508cab9e107d4d479147eb90fe0f",
        "refinement_interpretation_Tm_refine_401637ec06016fc5273a7cba7194b00f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_596b1ea49138dc5c887a99094c6d0ff0",
        "refinement_interpretation_Tm_refine_6272bc49248f7908206b12c28b5d0e55",
        "refinement_interpretation_Tm_refine_654b1853a637df167bd5a5fda217b9b1",
        "refinement_interpretation_Tm_refine_746b32d72b1384fea986fc2572ac7b39",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_8a953c94aff7b4b20ba0498f241d8f8b",
        "refinement_interpretation_Tm_refine_8f0f7addbf444e9d46499dc0fe0a3467",
        "refinement_interpretation_Tm_refine_93e375b84139efc724cf4343773f7588",
        "refinement_interpretation_Tm_refine_956bc881132332bd221131ea988e10db",
        "refinement_interpretation_Tm_refine_aa4b3d268075d84252df525db1f85524",
        "refinement_interpretation_Tm_refine_be6ca79e08cbafe6f6fcf7e8d5114e5f",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_c7a7ae02344e93dfc727273bab1d9414",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f27dbf51528fe35ce82f852bae5035a0",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_LowParse.CLens.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.CLens.__proj__Mkclens__item__clens_get",
        "token_correspondence_Prims.pow2.fuel_instrumented", "true_interp",
        "typing_FStar.Map.contains", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.v",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Low.Base.Spec.content_length",
        "typing_LowParse.Low.Base.Spec.contents_",
        "typing_LowParse.Low.Base.Spec.get_valid_pos",
        "typing_LowParse.Low.Combinators.clens_fst",
        "typing_LowParse.Low.Combinators.clens_snd",
        "typing_LowParse.Low.Combinators.gaccessor_fst",
        "typing_LowParse.Low.Combinators.gaccessor_snd",
        "typing_LowParse.Low.ErrorCode.is_error",
        "typing_LowParse.Low.ErrorCode.uint64_to_uint32",
        "typing_LowParse.Low.ErrorCode.validator_error_generic",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Spec.VarInt.parse_varint",
        "typing_QUIC.Spec.VarInt.parse_varint_",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "typing_QUIC.UInt62.bound", "unit_typing"
      ],
      0,
      "681ad87ef7dda699b2c35aef09a52744"
    ],
    [
      "QUIC.Impl.VarInt.read_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "1c441f2e725433136138b52bc361ab36"
    ],
    [
      "QUIC.Impl.VarInt.read_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Tm_unit",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "data_elim_LowParse.Slice.Mkslice",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.size_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.Spec.content_length_",
        "equation_LowParse.Low.Base.Spec.contents_",
        "equation_LowParse.Low.Base.Spec.valid_",
        "equation_LowParse.Low.Base.Spec.valid_content",
        "equation_LowParse.Low.Base.Spec.valid_content_pos",
        "equation_LowParse.Low.Base.Spec.valid_pos",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.synth_u14",
        "equation_QUIC.Spec.VarInt.synth_u30",
        "equation_QUIC.Spec.VarInt.synth_u62", "equation_QUIC.UInt62.bound",
        "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.size_t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_00676929318b14dfd08ffa5b812ab4d0",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_LowParse.BitFields.uint8_v_eq",
        "lemma_LowParse.Low.Base.Spec.content_length_post",
        "lemma_LowParse.Low.Base.Spec.slice_access_frame_weak",
        "lemma_LowParse.Low.Base.Spec.slice_access_post",
        "lemma_LowParse.Low.Base.Spec.valid_elim_",
        "lemma_LowParse.Low.Base.Spec.valid_frame",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_sym_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.CLens.Mkclens_clens_cond",
        "proj_equation_LowParse.CLens.Mkclens_clens_get",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.CLens.Mkclens_clens_cond",
        "projection_inverse_LowParse.CLens.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_401637ec06016fc5273a7cba7194b00f",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_45b91a205b6edad79aa0ffc4c6f6deaa",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_596b1ea49138dc5c887a99094c6d0ff0",
        "refinement_interpretation_Tm_refine_6272bc49248f7908206b12c28b5d0e55",
        "refinement_interpretation_Tm_refine_7378e7456164b888c0866c9f5d1b615e",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_956bc881132332bd221131ea988e10db",
        "refinement_interpretation_Tm_refine_aa47d44b48519b2178d103fd785712d3",
        "refinement_interpretation_Tm_refine_aa4b3d268075d84252df525db1f85524",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_c7a7ae02344e93dfc727273bab1d9414",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_cfff43f55c9c9b328de2e8b12942a721",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_e4ff87a06a04fb691ee5ddded18d4c30",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fb935b184a970cdf4a72f87ad688979c",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_LowParse.CLens.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.CLens.__proj__Mkclens__item__clens_get",
        "true_interp", "typing_FStar.Map.contains",
        "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_FStar.UInt8.t",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Low.Base.Spec.content_length",
        "typing_LowParse.Low.Base.Spec.content_length_",
        "typing_LowParse.Low.Base.Spec.contents_",
        "typing_LowParse.Low.Combinators.clens_fst",
        "typing_LowParse.Low.Combinators.clens_snd",
        "typing_LowParse.Low.Combinators.gaccessor_fst",
        "typing_LowParse.Low.Combinators.gaccessor_snd",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Spec.VarInt.parse_varint",
        "typing_QUIC.Spec.VarInt.parse_varint_kind",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "typing_QUIC.UInt62.bound", "unit_typing"
      ],
      0,
      "1e4fb04d247e7f25000da6bdaa96b4b4"
    ],
    [
      "QUIC.Impl.VarInt.jump_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "4eb4a3ae8778e4ba826ead03f36331bb"
    ],
    [
      "QUIC.Impl.VarInt.jump_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Tm_unit", "data_elim_LowParse.Slice.Mkslice",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.size_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.Spec.content_length_",
        "equation_LowParse.Low.Base.Spec.contents_",
        "equation_LowParse.Low.Base.Spec.valid_",
        "equation_LowParse.Low.Base.Spec.valid_content",
        "equation_LowParse.Low.Base.Spec.valid_content_pos",
        "equation_LowParse.Low.Base.Spec.valid_pos",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.size_t", "int_inversion",
        "int_typing", "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Low.Base.Spec.content_length_post",
        "lemma_LowParse.Low.Base.Spec.get_valid_pos_post",
        "lemma_LowParse.Low.Base.Spec.valid_elim_",
        "lemma_LowParse.Low.Base.Spec.valid_frame",
        "lemma_LowParse.Low.Base.Spec.valid_pos_get_valid_pos",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_401637ec06016fc5273a7cba7194b00f",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_457554924b169004a05c243712517aa4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7378e7456164b888c0866c9f5d1b615e",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_956bc881132332bd221131ea988e10db",
        "refinement_interpretation_Tm_refine_aa4b3d268075d84252df525db1f85524",
        "refinement_interpretation_Tm_refine_be6ca79e08cbafe6f6fcf7e8d5114e5f",
        "refinement_interpretation_Tm_refine_c7a7ae02344e93dfc727273bab1d9414",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_cfff43f55c9c9b328de2e8b12942a721",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_e4ff87a06a04fb691ee5ddded18d4c30",
        "refinement_interpretation_Tm_refine_ea33e92687b791ef51fc3d2bfc7605b0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "typing_FStar.Map.contains", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_FStar.UInt8.t",
        "typing_LowParse.Low.Base.Spec.content_length",
        "typing_LowParse.Low.Base.Spec.content_length_",
        "typing_LowParse.Low.Base.Spec.get_valid_pos",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Spec.VarInt.parse_varint",
        "typing_QUIC.Spec.VarInt.parse_varint_kind",
        "typing_QUIC.UInt62.bound"
      ],
      0,
      "3c2863e0ec3f54db1fb7b4a65d14e2fd"
    ],
    [
      "QUIC.Impl.VarInt.seq_slice_i_j_k",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.nat",
        "int_inversion", "int_typing", "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_6bd58bc55e22cc130cfd680b04c64b91",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice"
      ],
      0,
      "75e015ad32438ce6f224709446ada616"
    ],
    [
      "QUIC.Impl.VarInt.write_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "cd7f012ad0c17a787f5f3efd0c9e1f19"
    ],
    [
      "QUIC.Impl.VarInt.write_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.size_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.writable",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.get_first_byte",
        "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.serialize_varint",
        "equation_QUIC.Spec.VarInt.serialize_varint_",
        "equation_QUIC.Spec.VarInt.serialize_varint_payload",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.size_t", "int_inversion",
        "int_typing", "kinding_FStar.Pervasives.Native.tuple2@tok",
        "l_and-interp",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_eq_refl",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_is_empty",
        "lemma_FStar.UInt32.uv_inv", "lemma_Lib.IntTypes.pow2_2",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_buffer_from_to_eq",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_gsub_buffer_l",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_0ff9773fba63eaa65f5a6b9c9522d495",
        "refinement_interpretation_Tm_refine_1bfa29ae43c25c57aec6f2e7f0f523f7",
        "refinement_interpretation_Tm_refine_21817eb665f80560822aa069c1609a15",
        "refinement_interpretation_Tm_refine_25a33e619be868cd96efd9349b8d4549",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_3f1905749137b97cdd67224fff567acb",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_aa4b3d268075d84252df525db1f85524",
        "refinement_interpretation_Tm_refine_b361ba8089a6e963921008d537e799a1",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f7cc8ac7699fec5138b590f21a5fae65",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "token_correspondence_QUIC.Spec.VarInt.serialize_varint_",
        "typing_FStar.Map.contains", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.slice",
        "typing_FStar.UInt32.sub", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.t",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowParse.Spec.Int.serialize_u8",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.len",
        "typing_LowStar.Monotonic.Buffer.loc_buffer_from_to",
        "typing_QUIC.Spec.VarInt.get_first_byte",
        "typing_QUIC.Spec.VarInt.parse_varint",
        "typing_QUIC.Spec.VarInt.parse_varint_kind",
        "typing_QUIC.Spec.VarInt.serialize_varint",
        "typing_QUIC.Spec.VarInt.serialize_varint_",
        "typing_QUIC.Spec.VarInt.serialize_varint_payload",
        "typing_QUIC.UInt62.bound"
      ],
      0,
      "1f84f07e8f28926c96bb7d8d74962e39"
    ],
    [
      "QUIC.Impl.VarInt.validate_bounded_varint",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_3e157271fe2d868289a379893198d747",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v"
      ],
      0,
      "49b66d043bf3f584ea034b30003e444a"
    ],
    [
      "QUIC.Impl.VarInt.validate_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.None",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_3e157271fe2d868289a379893198d747",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v"
      ],
      0,
      "524f9537e2f5ef83ca9b2af33aea03f7"
    ],
    [
      "QUIC.Impl.VarInt.read_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "a5b2b3409ed5004f209470636f77c845"
    ],
    [
      "QUIC.Impl.VarInt.read_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v"
      ],
      0,
      "c5ee0b8d47331951186e4202e601f89d"
    ],
    [
      "QUIC.Impl.VarInt.jump_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "84ce5e09ad1bdfd0601f3919065b6e13"
    ],
    [
      "QUIC.Impl.VarInt.jump_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v",
        "typing_Prims.pow2"
      ],
      0,
      "42283168ce2009c24af01713564dce0a"
    ],
    [
      "QUIC.Impl.VarInt.write_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "9d5a8db2e8c0c6e78d4aa08dc342a163"
    ],
    [
      "QUIC.Impl.VarInt.write_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Spec.VarInt_interpretation_Tm_arrow_3c922a2dcd057b084dbfbc6fab52e173",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Spec.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_4689762d8936cd661071819a684ec9b0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_Prims.pow2"
      ],
      0,
      "0517c6c17b1d2c18765727f7b67eb7d8"
    ],
    [
      "QUIC.Impl.VarInt.varint_len_correct",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "73d32136f739d247fc87ba4b6679fe29"
    ],
    [
      "QUIC.Impl.VarInt.varint_len_correct",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.Int.Cast.uint64_to_uint8",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.mod", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt64.lt",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.size_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Impl.Base.varint_len",
        "equation_QUIC.Spec.VarInt.get_first_byte",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.serialize_varint",
        "equation_QUIC.Spec.VarInt.serialize_varint_",
        "equation_QUIC.Spec.VarInt.serialize_varint_payload",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.size_t",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_FStar.UInt64.vu_inv", "lemma_Lib.IntTypes.pow2_2",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_06f2bf4950bb76094f7b7f43daea2409",
        "refinement_interpretation_Tm_refine_0d41224c682684630fd89def512a35ee",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_2905e4cd1a81244ae97dc5c62563e060",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_60e95c809640d020e84e558feebbedbc",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7e0b9b2dbca36eab00de093c1b701c6d",
        "refinement_interpretation_Tm_refine_94d25b6e0041d543efd58300424ecc37",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d57bbb8a0892a29364b042816d5d0e20",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "token_correspondence_QUIC.Spec.VarInt.serialize_varint_",
        "typing_FStar.Int.Cast.uint64_to_uint32",
        "typing_FStar.Int.Cast.uint64_to_uint8",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.div", "typing_FStar.UInt64.rem",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.t",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Combinators.serialize_nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowParse.Spec.Int.serialize_u32",
        "typing_LowParse.Spec.Int.serialize_u8", "typing_Prims.pow2",
        "typing_QUIC.Impl.Base.varint_len",
        "typing_QUIC.Spec.VarInt.get_first_byte",
        "typing_QUIC.Spec.VarInt.parse_varint",
        "typing_QUIC.Spec.VarInt.parse_varint_kind",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Spec.VarInt.serialize_varint",
        "typing_QUIC.Spec.VarInt.serialize_varint_",
        "typing_QUIC.Spec.VarInt.serialize_varint_payload"
      ],
      0,
      "7824f9bc01da339df16d7b01c3e531ee"
    ],
    [
      "QUIC.Impl.VarInt.bounded_varint_len_correct",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.UInt62.bound", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_4689762d8936cd661071819a684ec9b0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.BoundedInt.in_bounds"
      ],
      0,
      "a0112d49daee7b77aea4f4b6c5205fb5"
    ],
    [
      "QUIC.Impl.VarInt.bounded_varint_len_correct",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Spec.VarInt_interpretation_Tm_arrow_04e35d6abc5e56e52014742b6ae34b23",
        "QUIC.Spec.VarInt_interpretation_Tm_arrow_3c922a2dcd057b084dbfbc6fab52e173",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.serialize_filter",
        "equation_LowParse.Spec.Combinators.serialize_filter_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.parse_bounded_varint",
        "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.serialize_bounded_varint",
        "equation_QUIC.Spec.VarInt.serialize_varint",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Spec.VarInt.synth_bounded_varint",
        "function_token_typing_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_bfa8dcf99c826252d218c81445ca4d3d",
        "lemma_FStar.Int.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_4689762d8936cd661071819a684ec9b0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.BoundedInt.in_bounds",
        "typing_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "typing_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok"
      ],
      0,
      "d9a5f0cb60044ae92df5d3570d233e25"
    ],
    [
      "QUIC.Impl.VarInt.bounded_varint_len_correct",
      3,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Spec.VarInt_interpretation_Tm_arrow_3c922a2dcd057b084dbfbc6fab52e173",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.serialize_filter",
        "equation_LowParse.Spec.Combinators.serialize_filter_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_bounded_varint",
        "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.serialize_bounded_varint",
        "equation_QUIC.Spec.VarInt.serialize_varint",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "function_token_typing_QUIC.Spec.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_bfa8dcf99c826252d218c81445ca4d3d",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_4689762d8936cd661071819a684ec9b0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.BoundedInt.in_bounds",
        "typing_QUIC.Spec.VarInt.synth_bounded_varint_recip"
      ],
      0,
      "d7b083d1d08ace2cb721fb49bf0ceebf"
    ]
  ]
]