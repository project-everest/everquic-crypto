[
  "4c84f07524b186439b158adda8c23377",
  [
    [
      "QUICTest.idx",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_FStar.Integers.W16",
        "constructor_distinct_FStar.Integers.W64",
        "constructor_distinct_FStar.Integers.W8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Spec.Agile.AEAD.CHACHA20_POLY1305",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "equality_tok_FStar.Integers.W16@tok",
        "equality_tok_FStar.Integers.W64@tok",
        "equality_tok_FStar.Integers.W8@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Spec.Agile.AEAD.CHACHA20_POLY1305@tok",
        "equality_tok_Spec.Hash.Definitions.SHA2_256@tok",
        "equation_Lib.IntTypes.unsigned",
        "equation_QUIC.Spec.Crypto.supported_aead",
        "equation_QUIC.Spec.Crypto.supported_hash", "equation_Spec.AES.gf8",
        "equation_Spec.AES.irred", "equation_Spec.GaloisField.gf",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_FStar.Integers.Signed__0",
        "projection_inverse_FStar.Integers.Unsigned__0",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "typing_Spec.AES.gf8", "typing_Spec.GaloisField.__proj__GF__item__t"
      ],
      0,
      "6dfdbb843abd5cc99b0ae08547564cb0"
    ],
    [
      "QUICTest.is_success_body",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "constructor_distinct_EverCrypt.Error.AuthenticationFailure",
        "constructor_distinct_EverCrypt.Error.DecodeError",
        "constructor_distinct_EverCrypt.Error.InvalidIVLength",
        "constructor_distinct_EverCrypt.Error.InvalidKey",
        "constructor_distinct_EverCrypt.Error.Success",
        "constructor_distinct_EverCrypt.Error.UnsupportedAlgorithm",
        "disc_equation_EverCrypt.Error.Success",
        "equality_tok_EverCrypt.Error.AuthenticationFailure@tok",
        "equality_tok_EverCrypt.Error.DecodeError@tok",
        "equality_tok_EverCrypt.Error.InvalidIVLength@tok",
        "equality_tok_EverCrypt.Error.InvalidKey@tok",
        "equality_tok_EverCrypt.Error.Success@tok",
        "equality_tok_EverCrypt.Error.UnsupportedAlgorithm@tok",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "lemma_FStar.Map.lemma_ContainsDom",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_365abba901205a01d0ef28ebf2198c47",
        "typing_EverCrypt.Error.uu___is_Success",
        "typing_FStar.Map.contains", "typing_FStar.Monotonic.Heap.heap",
        "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperHeap.rid_freeable",
        "typing_FStar.Monotonic.HyperHeap.root",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip"
      ],
      0,
      "689ffb2ac5c450e2e24093d5e29800b7"
    ],
    [
      "QUICTest.is_success",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "215e1de919322f191d68a547ba995dcc"
    ],
    [
      "QUICTest.check_is_true_body",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.unsigned",
        "equation_Spec.AES.gf8", "equation_Spec.AES.irred",
        "equation_Spec.GaloisField.gf",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "typing_Lib.IntTypes.unsigned", "typing_Spec.AES.gf8",
        "typing_Spec.GaloisField.__proj__GF__item__t",
        "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "19e7b97922b4b13c3310e5f98981d574"
    ],
    [
      "QUICTest.check_is_true",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "5b6fac6e34d34b8110964249274cd37a"
    ],
    [
      "QUICTest.is_equal",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.SEC@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.unsigned",
        "equation_LowStar.Buffer.buffer",
        "equation_LowStar.Buffer.trivial_preorder", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_QUICTest.traffic_secret_length",
        "equation_QUICTest.traffic_secret_length_correct",
        "function_token_typing_QUICTest.traffic_secret_length_correct",
        "int_inversion", "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_QUIC.Secret.Seq.seq_hide_length", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_6c1e5ea04dc5c8ceecf17a05967b942b",
        "refinement_interpretation_Tm_refine_e9bf441d1489a8eaf7df80b4a9a48db5",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.v",
        "typing_FStar.UInt8.t", "typing_Lib.IntTypes.int_t",
        "typing_Lib.IntTypes.unsigned",
        "typing_LowStar.Buffer.trivial_preorder",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.SEC@tok",
        "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "a24a67eb0a1bdfda98b689772d589bab"
    ],
    [
      "QUICTest.used_in_not_unused_in_disjoint",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "574ca290f6a3673e2584b4595c510389"
    ],
    [
      "QUICTest.test",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "QUIC.Impl.Header.Base_pretyping_8da4018b2f41a1beee4295e929c37514",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Integers.Unsigned",
        "constructor_distinct_FStar.Integers.W16",
        "constructor_distinct_FStar.Integers.W32",
        "constructor_distinct_FStar.Integers.W64",
        "constructor_distinct_FStar.Integers.W8",
        "constructor_distinct_FStar.Integers.Winfinite",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.SEC",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Prims.Cons",
        "constructor_distinct_QUIC.Impl.Header.Base.BInitial",
        "constructor_distinct_QUIC.Impl.Header.Base.BLong",
        "constructor_distinct_QUIC.Spec.Header.Base.MHandshake",
        "constructor_distinct_QUIC.Spec.Header.Base.MInitial",
        "constructor_distinct_QUIC.Spec.Header.Base.MLong",
        "constructor_distinct_QUIC.Spec.Header.Base.MRetry",
        "constructor_distinct_QUIC.Spec.Header.Base.MShort",
        "constructor_distinct_QUIC.Spec.Header.Base.MZeroRTT",
        "constructor_distinct_QUIC.Spec.Success",
        "constructor_distinct_Spec.Agile.AEAD.CHACHA20_POLY1305",
        "constructor_distinct_Spec.Agile.Cipher.CHACHA20",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "data_elim_Prims.Cons", "data_elim_QUIC.Impl.Header.Base.BInitial",
        "data_elim_QUIC.Impl.Header.Base.BLong",
        "data_elim_QUIC.Impl.Header.Base.Mkresult",
        "data_elim_QUIC.State.Mkindex",
        "disc_equation_EverCrypt.Error.Success",
        "disc_equation_Lib.IntTypes.SEC",
        "disc_equation_QUIC.Impl.Header.Base.BLong",
        "disc_equation_QUIC.Impl.Header.Base.BRetry",
        "disc_equation_QUIC.Spec.Failure",
        "disc_equation_QUIC.Spec.Header.Base.MLong",
        "disc_equation_QUIC.Spec.Header.Base.MRetry",
        "disc_equation_QUIC.Spec.Header.Base.MShort",
        "equality_tok_C.EXIT_FAILURE@tok", "equality_tok_C.EXIT_SUCCESS@tok",
        "equality_tok_EverCrypt.Error.Success@tok",
        "equality_tok_FStar.Integers.W16@tok",
        "equality_tok_FStar.Integers.W32@tok",
        "equality_tok_FStar.Integers.W64@tok",
        "equality_tok_FStar.Integers.W8@tok",
        "equality_tok_FStar.Integers.Winfinite@tok",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.SEC@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Spec.Agile.AEAD.CHACHA20_POLY1305@tok",
        "equality_tok_Spec.Agile.Cipher.CHACHA20@tok",
        "equality_tok_Spec.Hash.Definitions.SHA2_256@tok",
        "equation_FStar.HyperStack.ST.equal_domains",
        "equation_FStar.HyperStack.ST.equal_stack_domains",
        "equation_FStar.HyperStack.ST.inline_stack_inv",
        "equation_FStar.HyperStack.ST.is_eternal_region",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.Integers.int_t", "equation_FStar.Integers.uint_8",
        "equation_FStar.Monotonic.Heap.equal_dom",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.fresh_frame",
        "equation_FStar.Monotonic.HyperStack.is_heap_color",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.Monotonic.HyperStack.pop",
        "equation_FStar.Monotonic.HyperStack.poppable",
        "equation_FStar.Monotonic.HyperStack.popped",
        "equation_FStar.Monotonic.HyperStack.remove_elt",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lt", "equation_Lib.IntTypes.bits",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.maxint", "equation_Lib.IntTypes.minint",
        "equation_Lib.IntTypes.op_At_Percent_Dot",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.pub_int_v",
        "equation_Lib.IntTypes.range", "equation_Lib.IntTypes.uint8",
        "equation_Lib.IntTypes.unsigned", "equation_Lib.IntTypes.v",
        "equation_Lib.Sequence.lseq", "equation_Lib.Sequence.seq",
        "equation_LowStar.Buffer.buffer", "equation_LowStar.Buffer.pointer",
        "equation_LowStar.Buffer.pointer_or_null",
        "equation_LowStar.Buffer.trivial_preorder",
        "equation_LowStar.Monotonic.Buffer.disjoint",
        "equation_LowStar.Monotonic.Buffer.fresh_loc",
        "equation_LowStar.Monotonic.Buffer.get",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Impl.Base.varint_len",
        "equation_QUIC.Impl.Header.Base.g_header",
        "equation_QUIC.Impl.Header.Base.has_payload_length",
        "equation_QUIC.Impl.Header.Base.header_footprint",
        "equation_QUIC.Impl.Header.Base.header_len",
        "equation_QUIC.Impl.Header.Base.header_live",
        "equation_QUIC.Impl.Header.Base.is_retry",
        "equation_QUIC.Impl.Header.Base.payload_and_pn_length",
        "equation_QUIC.Impl.Header.Base.payload_length",
        "equation_QUIC.Impl.Header.Base.pn_length",
        "equation_QUIC.Impl.Header.Base.public_header_len",
        "equation_QUIC.Spec.Base.byte", "equation_QUIC.Spec.Base.bytes",
        "equation_QUIC.Spec.Base.header_len_bound",
        "equation_QUIC.Spec.Base.lbytes",
        "equation_QUIC.Spec.Base.payload_and_pn_length_t",
        "equation_QUIC.Spec.Base.token_max_len",
        "equation_QUIC.Spec.Base.varint_len",
        "equation_QUIC.Spec.Crypto.cipher_keysize",
        "equation_QUIC.Spec.Crypto.ha",
        "equation_QUIC.Spec.Crypto.max_plain_length",
        "equation_QUIC.Spec.Crypto.pbytes_",
        "equation_QUIC.Spec.Crypto.supported_hash",
        "equation_QUIC.Spec.Header.Base.header_len",
        "equation_QUIC.Spec.Header.Base.is_retry",
        "equation_QUIC.Spec.Header.Base.packet_number",
        "equation_QUIC.Spec.Header.Base.payload_length",
        "equation_QUIC.Spec.Header.Base.pn_length",
        "equation_QUIC.Spec.PacketNumber.Base.bound_npn_",
        "equation_QUIC.Spec.PacketNumber.Base.in_window",
        "equation_QUIC.Spec.PacketNumber.Base.packet_number_length_t",
        "equation_QUIC.Spec.PacketNumber.Base.packet_number_t",
        "equation_QUIC.State.derive_iv", "equation_QUIC.State.derive_k",
        "equation_QUIC.State.derive_pne", "equation_QUIC.State.footprint",
        "equation_QUIC.State.incrementable", "equation_QUIC.State.invariant",
        "equation_QUIC.State.state", "equation_QUIC.UInt62.bound",
        "equation_QUIC.UInt62.secret", "equation_QUIC.UInt62.t",
        "equation_QUICTest._plain", "equation_QUICTest._traffic_secret",
        "equation_QUICTest.idx", "equation_QUICTest.plain_length",
        "equation_QUICTest.plain_length_correct",
        "equation_QUICTest.traffic_secret_length",
        "equation_QUICTest.traffic_secret_length_correct",
        "equation_Spec.AES.gf8", "equation_Spec.AES.irred",
        "equation_Spec.Agile.AEAD.cipher_alg_of_supported_alg",
        "equation_Spec.Agile.AEAD.iv_length",
        "equation_Spec.Agile.AEAD.key_length",
        "equation_Spec.Agile.AEAD.tag_length",
        "equation_Spec.Agile.AEAD.uint8", "equation_Spec.Agile.Cipher.key",
        "equation_Spec.Agile.Cipher.key_length",
        "equation_Spec.Chacha20.idx", "equation_Spec.Chacha20.key",
        "equation_Spec.Chacha20.size_block",
        "equation_Spec.Chacha20.size_key", "equation_Spec.GaloisField.gf",
        "equation_Spec.Hash.Definitions.hash_length",
        "equation_Spec.Hash.Definitions.hash_word_length",
        "equation_Spec.Hash.Definitions.is_md",
        "equation_Spec.Hash.Definitions.word_length",
        "equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented",
        "fuel_guarded_inversion_QUIC.Impl.Header.Base.header",
        "fuel_guarded_inversion_QUIC.Impl.Header.Base.long_header_specifics",
        "fuel_guarded_inversion_QUIC.Impl.Header.Base.result",
        "function_token_typing_FStar.Integers.uint_8",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.uint8",
        "function_token_typing_LowStar.Buffer.trivial_preorder",
        "function_token_typing_Prims.int",
        "function_token_typing_QUICTest.plain_length_correct",
        "function_token_typing_QUICTest.traffic_secret_length_correct",
        "haseqTm_refine_542f9d4f129664613f2483a6c88bc7c2", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_612136ee4143d24977831c80e4f470a1",
        "kinding_QUIC.Impl.Header.Base.result@tok", "l_and-interp",
        "lemma_FStar.Bytes.length_reveal", "lemma_FStar.Bytes.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_same_refs_in_all_regions_elim",
        "lemma_FStar.HyperStack.ST.lemma_same_refs_in_non_tip_regions_elim",
        "lemma_FStar.HyperStack.ST.lemma_same_refs_in_stack_regions_elim",
        "lemma_FStar.HyperStack.ST.lemma_same_refs_in_stack_regions_intro",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Map.lemma_InDomRestrict",
        "lemma_FStar.Map.lemma_SelRestrict", "lemma_FStar.Map.lemma_SelUpd1",
        "lemma_FStar.Map.lemma_SelUpd2",
        "lemma_FStar.Monotonic.HyperStack.lemma_map_invariant",
        "lemma_FStar.Monotonic.HyperStack.lemma_mk_mem__projectors",
        "lemma_FStar.Monotonic.HyperStack.lemma_tip_top_smt",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Set.lemma_equal_elim", "lemma_FStar.Set.mem_complement",
        "lemma_FStar.Set.mem_intersect", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt32.vu_inv", "lemma_FStar.UInt64.vu_inv",
        "lemma_FStar.UInt8.vu_inv", "lemma_Lib.IntTypes.add_lemma",
        "lemma_Lib.IntTypes.pow2_2", "lemma_Lib.IntTypes.sub_lemma",
        "lemma_Lib.IntTypes.v_injective",
        "lemma_LowStar.Monotonic.Buffer.address_liveness_insensitive_buffer",
        "lemma_LowStar.Monotonic.Buffer.lemma_live_equal_mem_domains",
        "lemma_LowStar.Monotonic.Buffer.len_gsub",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.live_gsub",
        "lemma_LowStar.Monotonic.Buffer.live_loc_not_unused_in",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_includes_r",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_sym_",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_union_r_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_addresses_addresses_2",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_addresses_buffer_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_gsub_buffer_r_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_union_r_",
        "lemma_LowStar.Monotonic.Buffer.loc_union_comm",
        "lemma_LowStar.Monotonic.Buffer.modifies_buffer_elim",
        "lemma_LowStar.Monotonic.Buffer.modifies_liveness_insensitive_buffer",
        "lemma_LowStar.Monotonic.Buffer.modifies_liveness_insensitive_buffer_weak",
        "lemma_LowStar.Monotonic.Buffer.modifies_loc_unused_in",
        "lemma_LowStar.Monotonic.Buffer.unused_in_loc_unused_in",
        "lemma_QUIC.Secret.Seq.seq_hide_reveal",
        "lemma_QUIC.Secret.Seq.seq_reveal_length",
        "lemma_QUIC.State.hash_is_keysized", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_Division", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_QUIC.Impl.Header.Base.BLong_spec",
        "proj_equation_QUIC.Impl.Header.Base.Mkresult_header",
        "proj_equation_QUIC.Impl.Header.Base.Mkresult_header_len",
        "proj_equation_QUIC.Impl.Header.Base.Mkresult_plain_len",
        "proj_equation_QUIC.Impl.Header.Base.Mkresult_pn",
        "proj_equation_QUIC.Impl.Header.Base.Mkresult_total_len",
        "proj_equation_QUIC.Spec.Header.Base.MLong_spec",
        "proj_equation_QUIC.State.Mkindex_aead_alg",
        "proj_equation_QUIC.State.Mkindex_hash_alg",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Integers.Signed__0",
        "projection_inverse_FStar.Integers.Unsigned__0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "projection_inverse_QUIC.Impl.Header.Base.BInitial_packet_number_length",
        "projection_inverse_QUIC.Impl.Header.Base.BInitial_payload_and_pn_length",
        "projection_inverse_QUIC.Impl.Header.Base.BInitial_reserved_bits",
        "projection_inverse_QUIC.Impl.Header.Base.BInitial_token",
        "projection_inverse_QUIC.Impl.Header.Base.BInitial_token_length",
        "projection_inverse_QUIC.Impl.Header.Base.BLong_dcid",
        "projection_inverse_QUIC.Impl.Header.Base.BLong_dcil",
        "projection_inverse_QUIC.Impl.Header.Base.BLong_scid",
        "projection_inverse_QUIC.Impl.Header.Base.BLong_scil",
        "projection_inverse_QUIC.Impl.Header.Base.BLong_spec",
        "projection_inverse_QUIC.Impl.Header.Base.BLong_version",
        "projection_inverse_QUIC.Spec.Header.Base.MInitial_packet_number",
        "projection_inverse_QUIC.Spec.Header.Base.MInitial_packet_number_length",
        "projection_inverse_QUIC.Spec.Header.Base.MInitial_payload_and_pn_length",
        "projection_inverse_QUIC.Spec.Header.Base.MInitial_reserved_bits",
        "projection_inverse_QUIC.Spec.Header.Base.MInitial_token",
        "projection_inverse_QUIC.Spec.Header.Base.MLong_dcid",
        "projection_inverse_QUIC.Spec.Header.Base.MLong_scid",
        "projection_inverse_QUIC.Spec.Header.Base.MLong_spec",
        "projection_inverse_QUIC.Spec.Header.Base.MLong_version",
        "projection_inverse_QUIC.Spec.Success_h",
        "projection_inverse_QUIC.Spec.Success_plain",
        "projection_inverse_QUIC.Spec.Success_remainder",
        "projection_inverse_QUIC.State.Mkindex_aead_alg",
        "projection_inverse_QUIC.State.Mkindex_hash_alg",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_0ea1fba779ad5718e28476faeef94d56",
        "refinement_interpretation_Tm_refine_10aff6fa3340c90827ff7b058cdbe07e",
        "refinement_interpretation_Tm_refine_11ad883ca0ed677799ed8780338bfaa2",
        "refinement_interpretation_Tm_refine_153e687ebdbb4db2f55ced5c1e1dde07",
        "refinement_interpretation_Tm_refine_156c49afb7e1e070fbb2e47dc0e3d4b2",
        "refinement_interpretation_Tm_refine_1622082edcbeee4d7aa5d33c2647f14f",
        "refinement_interpretation_Tm_refine_1c83e43dc119f3b9f843ce1b4fcf61f0",
        "refinement_interpretation_Tm_refine_1cc58e901e83e96dff5b4d1682343605",
        "refinement_interpretation_Tm_refine_228d41cafbbbee3ce7daa8bda56a41ca",
        "refinement_interpretation_Tm_refine_22be85a2256856539b84e46d1b00924a",
        "refinement_interpretation_Tm_refine_25c72d704900d626b30894312c325451",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_2cdcf23dde76eaaabed8d3b7a2d3160d",
        "refinement_interpretation_Tm_refine_365abba901205a01d0ef28ebf2198c47",
        "refinement_interpretation_Tm_refine_387e6d282145573240ab7b8a4b94cce5",
        "refinement_interpretation_Tm_refine_3daf37ab3cd19c1e74e63f8f5e0fb16a",
        "refinement_interpretation_Tm_refine_3ff99b3cb718d0287e3a41d0cf9404f4",
        "refinement_interpretation_Tm_refine_412ef27e14e7f8f305e85d1d44c04967",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_48486e77aa5457d9a27027fef170c244",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_4bf8cc0f665b8b5ee61d921ed7785392",
        "refinement_interpretation_Tm_refine_4c82af8a46684f75d7fe12f75a0fb1a7",
        "refinement_interpretation_Tm_refine_4f1cffa40412af126565457cc49b8cca",
        "refinement_interpretation_Tm_refine_4fa8e2dd96f8bb1e23e6574326e9e019",
        "refinement_interpretation_Tm_refine_5209a044812fc49cc205f3590595e3e1",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_55ad6dde98f777fb8caf2adfada0d12e",
        "refinement_interpretation_Tm_refine_5649d83182044a916493f35ed2809b93",
        "refinement_interpretation_Tm_refine_573cfed777dae20cc82e8fef9622857e",
        "refinement_interpretation_Tm_refine_61996e71be2fffdc67021fb0c8794d93",
        "refinement_interpretation_Tm_refine_644afcffd6bfad7701bc221f5aca3d6e",
        "refinement_interpretation_Tm_refine_709aff84c75b0fff77dcbf3b529649dd",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_7c4161c9505fe096ba66623182cf5f6d",
        "refinement_interpretation_Tm_refine_837aaa25c6967f53b930fd73a3026b51",
        "refinement_interpretation_Tm_refine_83845a86f2550cdf941eeb1d9b59602b",
        "refinement_interpretation_Tm_refine_89c1d5caeae1b0c9c4b7ad47a3970283",
        "refinement_interpretation_Tm_refine_9d3fd79fd314167f1a9c213a188da3ec",
        "refinement_interpretation_Tm_refine_9dd6ec28495d0d8104f218c842251ad3",
        "refinement_interpretation_Tm_refine_9fb47a7027a05698fb0800b7a6086c39",
        "refinement_interpretation_Tm_refine_a57e02bee5f442922b2dc5c95b43c689",
        "refinement_interpretation_Tm_refine_a6fce85b67bdd71ab9416e435ac3b18a",
        "refinement_interpretation_Tm_refine_a9ab750a49a070aecdef876003524728",
        "refinement_interpretation_Tm_refine_a9e6184981784a7b16f6d4a7df0cf8ae",
        "refinement_interpretation_Tm_refine_aa4b3d268075d84252df525db1f85524",
        "refinement_interpretation_Tm_refine_b449e7b9232f5b2da64c1e1c42cbf734",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bc091439e537dad49a811907a6d15e1b",
        "refinement_interpretation_Tm_refine_bc7491fe84ac0f66796ce971e2fc4d97",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_c27fd734c4227c192821cc9bd856c65c",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_cd18e9962a0d204005dcfcda04529ffc",
        "refinement_interpretation_Tm_refine_cdb20ea2e877751488e618552edde090",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_d1f89ed1c1cb0c2f95ff3e34d92a1ac8",
        "refinement_interpretation_Tm_refine_d2d1ea66f2b3a92c2deb42edcbb784ce",
        "refinement_interpretation_Tm_refine_d57bbb8a0892a29364b042816d5d0e20",
        "refinement_interpretation_Tm_refine_d8d83307254a8900dd20598654272e42",
        "refinement_interpretation_Tm_refine_dd3c82cae5d6c8fffaa8796b0a3d60d5",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "refinement_interpretation_Tm_refine_df7141b051e9600374b6a7fbebd3eca8",
        "refinement_interpretation_Tm_refine_e9bf441d1489a8eaf7df80b4a9a48db5",
        "refinement_interpretation_Tm_refine_ee8b234aa6cf07c6ef04345829148435",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f63e058f9631c11993f3ef0430296051",
        "refinement_interpretation_Tm_refine_feb9bb9f35b4e580b5c2b388310d192a",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_kinding_Tm_refine_bc091439e537dad49a811907a6d15e1b",
        "token_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "true_interp", "typing_FStar.Bytes.hide", "typing_FStar.Bytes.len",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.List.Tot.Base.length", "typing_FStar.Map.contains",
        "typing_FStar.Map.domain", "typing_FStar.Map.restrict",
        "typing_FStar.Map.sel", "typing_FStar.Monotonic.Heap.emp",
        "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperHeap.rid_freeable",
        "typing_FStar.Monotonic.HyperHeap.root",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_rid_ctr",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Monotonic.HyperStack.is_stack_region",
        "typing_FStar.Monotonic.HyperStack.mk_mem",
        "typing_FStar.Monotonic.HyperStack.remove_elt",
        "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Properties.seq_of_list",
        "typing_FStar.Set.complement", "typing_FStar.Set.singleton",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.sub", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.t",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.uint_to_t", "typing_Lib.IntTypes.bits",
        "typing_Lib.IntTypes.cast", "typing_Lib.IntTypes.minint",
        "typing_Lib.IntTypes.mk_int", "typing_Lib.IntTypes.v",
        "typing_Lib.RawIntTypes.u32_to_UInt32",
        "typing_Lib.RawIntTypes.u64_to_UInt64",
        "typing_LowStar.Buffer.pointer_or_null",
        "typing_LowStar.Buffer.trivial_preorder",
        "typing_LowStar.Monotonic.Buffer.address_liveness_insensitive_locs",
        "typing_LowStar.Monotonic.Buffer.as_addr",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.frameOf",
        "typing_LowStar.Monotonic.Buffer.g_is_null",
        "typing_LowStar.Monotonic.Buffer.get",
        "typing_LowStar.Monotonic.Buffer.len",
        "typing_LowStar.Monotonic.Buffer.length",
        "typing_LowStar.Monotonic.Buffer.loc_addresses",
        "typing_LowStar.Monotonic.Buffer.loc_buffer",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_LowStar.Monotonic.Buffer.loc_not_unused_in",
        "typing_LowStar.Monotonic.Buffer.loc_union",
        "typing_LowStar.Monotonic.Buffer.loc_unused_in",
        "typing_LowStar.Monotonic.Buffer.mgsub",
        "typing_LowStar.Monotonic.Buffer.mnull", "typing_Prims.pow2",
        "typing_QUIC.Impl.Base.varint_len",
        "typing_QUIC.Impl.Header.Base.__proj__BLong__item__spec",
        "typing_QUIC.Impl.Header.Base.__proj__Mkresult__item__header",
        "typing_QUIC.Impl.Header.Base.__proj__Mkresult__item__header_len",
        "typing_QUIC.Impl.Header.Base.__proj__Mkresult__item__plain_len",
        "typing_QUIC.Impl.Header.Base.__proj__Mkresult__item__pn",
        "typing_QUIC.Impl.Header.Base.__proj__Mkresult__item__total_len",
        "typing_QUIC.Impl.Header.Base.g_header",
        "typing_QUIC.Impl.Header.Base.has_payload_length",
        "typing_QUIC.Impl.Header.Base.header_footprint",
        "typing_QUIC.Impl.Header.Base.header_len",
        "typing_QUIC.Impl.Header.Base.payload_length",
        "typing_QUIC.Impl.Header.Base.public_header_len",
        "typing_QUIC.Secret.Int.hide", "typing_QUIC.Secret.Int.reveal",
        "typing_QUIC.Secret.Seq.seq_hide",
        "typing_QUIC.Secret.Seq.seq_reveal",
        "typing_QUIC.Spec.Crypto.derive_secret",
        "typing_QUIC.Spec.Crypto.label_hp",
        "typing_QUIC.Spec.Crypto.label_iv",
        "typing_QUIC.Spec.Crypto.label_key",
        "typing_QUIC.Spec.Crypto.supported_hash",
        "typing_QUIC.Spec.Header.Parse.format_header",
        "typing_QUIC.State.__proj__Mkindex__item__hash_alg",
        "typing_QUIC.State.derive_pne", "typing_QUIC.State.footprint_s",
        "typing_QUIC.State.g_traffic_secret", "typing_QUIC.State.state_s",
        "typing_QUIC.UInt62.bound", "typing_QUICTest._plain",
        "typing_QUICTest._traffic_secret", "typing_QUICTest.idx",
        "typing_Spec.AES.gf8", "typing_Spec.AES.irred",
        "typing_Spec.Chacha20.size_block",
        "typing_Spec.GaloisField.__proj__GF__item__t",
        "typing_tok_C.EXIT_FAILURE@tok", "typing_tok_C.EXIT_SUCCESS@tok",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.SEC@tok",
        "typing_tok_Lib.IntTypes.U32@tok", "typing_tok_Lib.IntTypes.U64@tok",
        "typing_tok_Lib.IntTypes.U8@tok",
        "typing_tok_Spec.Hash.Definitions.SHA2_256@tok"
      ],
      0,
      "0233e666592a0bd8cad8f35339f3979e"
    ]
  ]
]